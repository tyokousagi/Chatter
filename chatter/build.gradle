plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.2'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '1.0.3'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
	manifest {
        attributes 'Main-Class': 'com.example.chatter.ChatterApplication'
        //attributes 'Class-Path': configurations.runtimeClasspath.collect { it.getName() }.join(' ')
    }
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	//implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.4'
	compileOnly 'org.projectlombok:lombok'
	//developmentOnly 'org.springframework.boot:spring-boot-devtools'
	//implementation 'org.postgresql:postgresql' 
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.4'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'net.dv8tion:JDA:5.0.0-beta.19'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	//implementation("com.google.googlejavaformat:google-java-format:1.15.0")
	compileOnly("org.springframework.boot:spring-boot-configuration-processor")
	//implementation 'org.flywaydb:flyway-core'
	implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
    testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
	useJUnitPlatform()
}
